import datetime

import schedule
from telebot import types

from config import tz, bot
from couriers import Courier
from lunch_break import LunchBreak
from workday import Workday


def task_send_reminder_start():
    couriers = Courier().get_all_couriers()

    for courier in couriers:
        row_workday = Workday().get_row_courier_workday(courier["name"])

        if not row_workday:
            try:
                bot.send_message(courier['telegram_id'], f'–ü—Ä–∏–≤—ñ—Ç {courier["name"].title()}üëã –Ø–∫—â–æ —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –ø—Ä–∞—Ü—é—î—à, –Ω–µ –∑–∞–±—É–¥—å –≤—ñ–¥–º—ñ—Ç–∏—Ç–∏—Å—è –∫–æ–ª–∏ –ø—Ä–∏–π–¥–µ—à –Ω–∞ —Ä–æ–±–æ—Ç—É. –ì–∞—Ä–Ω–æ–≥–æ —Ç–∞ –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–Ω—èü§ô')
            except Exception as e:
                print(courier)
                print(e)


def task_send_reminder_end_lunch(telegram_id, time):
    courier = Courier(user_id=telegram_id).get_courier()
    date = datetime.datetime.now(tz).date()
    is_lunch_brake = LunchBreak().is_courier_finished_lunch(courier['name'], date, time)

    if is_lunch_brake:
        try:
            bot.send_message(telegram_id, '–¢–∏ –≤–∂–µ –≥–æ–¥–∏–Ω—É –Ω–∞ –æ–±—ñ–¥—ñ. –ù–µ –∑–∞–±—É–¥—å –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ –æ–±—ñ–¥"')  #  f'–õ—è–≥–∞–π —Å–ø–∞—Ç–∏, –≤—ñ–¥–ø–æ—á–∏–≤–∞–π! –Ø –∑–Ω–∞—é —Ç–∏ –≤—Ç–æ–º–ª—é—î—à—Å—è –∫–∞–ø–µ—Ü.–¢–∞–∫ —â–æ –ª—è–≥–∞–π —Å–ø–∞—Ç–∏ —Ü–µ —è —Ç–æ–±—ñ —Å–∫–∞–∑–∞–≤ –ü–æ–ª—Ç–∞–≤—Å—å–∫–∏–π –ø–∞–ª—ñ–π! –¢–∏ –∑—Ä–æ–∑—É–º—ñ–≤ –º–µ–Ω–µ –î—Ä–∞–∫–æ–Ω?'
        except Exception as e:
            print(telegram_id)
            print(e)

    return schedule.CancelJob


def task_filling_blanks():
    all_workdays = Workday().workdays
    all_lunch_brake = LunchBreak().lunch_brake
    name_couriers = []

    for lunch_brake in all_lunch_brake:
        if len(lunch_brake) == 3:
            LunchBreak().end_lunch_break(lunch_brake[1], '23:50:00')

    for idw, workday in enumerate(all_workdays):
        if len(workday) == 4:
            Workday().end_workday(workday[1], datetime.datetime.now(tz), '–í—ñ–¥—Å—É—Ç–Ω—î', idw + 1)
            if workday[1] not in name_couriers:
                name_couriers.append(workday[1])

    for name_courier in name_couriers:
        courier = Courier(name=name_courier).get_courier()

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_start_work = types.KeyboardButton(text='–Ø –≤–∂–µ –Ωa po–±–æ—Ç—ñüíº', request_location=True)
        markup.add(btn_start_work)
        try:
            bot.send_message(courier['telegram_id'],
                             f'–û—Ü–µ —Ç–∏ –ø–æ–ø–∞–≤! –°—Ö–æ–∂–µ —â–æ —Ç–∏ –Ω–µ –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–æ–±–æ—Ç—É. –ë—ñ–ª—å—à–µ —Ç–∞–∫ –Ω–µ —Ä–æ–±–∏.',
                             reply_markup=markup)
        except Exception as e:
            print(courier)
            print(e)


